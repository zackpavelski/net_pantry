'use strict';

/**
 * @module BitBuffer
 * @author nuintun
 * @author Kazuhiko Arase
 */
var BitBuffer = /*#__PURE__*/ (function () {
    function BitBuffer() {
        this.length = 0;
        this.buffer = [];
    }
    BitBuffer.prototype.getBuffer = function () {
        return this.buffer;
    };
    BitBuffer.prototype.getLengthInBits = function () {
        return this.length;
    };
    BitBuffer.prototype.getBit = function (index) {
        return ((this.buffer[(index / 8) >> 0] >>> (7 - (index % 8))) & 1) === 1;
    };
    BitBuffer.prototype.put = function (num, length) {
        for (var i = 0; i < length; i++) {
            this.putBit(((num >>> (length - i - 1)) & 1) === 1);
        }
    };
    BitBuffer.prototype.putBit = function (bit) {
        if (this.length === this.buffer.length * 8) {
            this.buffer.push(0);
        }
        if (bit) {
            this.buffer[(this.length / 8) >> 0] |= 0x80 >>> this.length % 8;
        }
        this.length++;
    };
    return BitBuffer;
}());

exports.BitBuffer = BitBuffer;
