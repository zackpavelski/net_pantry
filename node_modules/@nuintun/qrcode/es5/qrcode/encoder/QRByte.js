'use strict';

var Mode = require('../common/Mode.js');
var tslib = require('tslib');
var QRData = require('./QRData.js');
var UTF8 = require('../../encoding/UTF8.js');

/**
 * @module QR8BitByte
 * @author nuintun
 * @author Kazuhiko Arase
 */
var QRByte = /*#__PURE__*/ (function (_super) {
    tslib.__extends(QRByte, _super);
    /**
     * @constructor
     * @param {string} data
     */
    function QRByte(data, encode) {
        var _this = _super.call(this, Mode.Mode.Byte, data) || this;
        _this.encoding = -1;
        if (typeof encode === 'function') {
            var _a = encode(data), encoding = _a.encoding, bytes = _a.bytes;
            _this.bytes = bytes;
            _this.encoding = encoding;
        }
        else {
            _this.bytes = UTF8.UTF8(data);
            _this.encoding = 26 /* UTF8 */;
        }
        return _this;
    }
    /**
     * @public
     * @method write
     * @param {BitBuffer} buffer
     */
    QRByte.prototype.write = function (buffer) {
        var bytes = this.bytes;
        var length = bytes.length;
        for (var i = 0; i < length; i++) {
            buffer.put(bytes[i], 8);
        }
    };
    /**
     * @public
     * @method getLength
     * @returns {number}
     */
    QRByte.prototype.getLength = function () {
        return this.bytes.length;
    };
    return QRByte;
}(QRData.QRData));

exports.QRByte = QRByte;
