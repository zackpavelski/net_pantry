'use strict';

var Mode = require('../common/Mode.js');

/**
 * @module QRData
 * @author nuintun
 * @author Kazuhiko Arase
 */
var QRData = /*#__PURE__*/ (function () {
    function QRData(mode, data) {
        this.mode = mode;
        this.data = data;
    }
    QRData.prototype.getMode = function () {
        return this.mode;
    };
    QRData.prototype.getLengthInBits = function (version) {
        var mode = this.mode;
        var error = new Error("illegal mode: " + mode);
        if (1 <= version && version < 10) {
            // 1 - 9
            switch (mode) {
                case Mode.Mode.Numeric:
                    return 10;
                case Mode.Mode.Alphanumeric:
                    return 9;
                case Mode.Mode.Byte:
                    return 8;
                case Mode.Mode.Kanji:
                    return 8;
                default:
                    throw error;
            }
        }
        else if (version < 27) {
            // 10 - 26
            switch (mode) {
                case Mode.Mode.Numeric:
                    return 12;
                case Mode.Mode.Alphanumeric:
                    return 11;
                case Mode.Mode.Byte:
                    return 16;
                case Mode.Mode.Kanji:
                    return 10;
                default:
                    throw error;
            }
        }
        else if (version < 41) {
            // 27 - 40
            switch (mode) {
                case Mode.Mode.Numeric:
                    return 14;
                case Mode.Mode.Alphanumeric:
                    return 13;
                case Mode.Mode.Byte:
                    return 16;
                case Mode.Mode.Kanji:
                    return 12;
                default:
                    throw error;
            }
        }
        else {
            throw new Error("illegal version: " + version);
        }
    };
    return QRData;
}());

exports.QRData = QRData;
